{"remainingRequest":"/home/gynchiii/gem-farm/app/gem-farm/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/home/gynchiii/gem-farm/app/gem-farm/src/components/gem-farm/TestMint.vue?vue&type=template&id=15b9c88f&ts=true","dependencies":[{"path":"/home/gynchiii/gem-farm/app/gem-farm/src/components/gem-farm/TestMint.vue","mtime":1643839215713},{"path":"/home/gynchiii/gem-farm/app/gem-farm/node_modules/cache-loader/dist/cjs.js","mtime":1643597848373},{"path":"/home/gynchiii/gem-farm/app/gem-farm/node_modules/babel-loader/lib/index.js","mtime":1643597848340},{"path":"/home/gynchiii/gem-farm/app/gem-farm/node_modules/ts-loader/index.js","mtime":1643597859789},{"path":"/home/gynchiii/gem-farm/app/gem-farm/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1643597863917},{"path":"/home/gynchiii/gem-farm/app/gem-farm/node_modules/cache-loader/dist/cjs.js","mtime":1643597848373},{"path":"/home/gynchiii/gem-farm/app/gem-farm/node_modules/vue-loader-v16/dist/index.js","mtime":1643597863917}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgPGRpdiBjbGFzcz0ibmVzLWNvbnRhaW5lciB3aXRoLXRpdGxlIj4KICAgIDxwIGNsYXNzPSJ0aXRsZSI+Q3JlYXRlIFRlc3QgUmV3YXJkIE1pbnQ8L3A+CiAgICA8YnV0dG9uIGNsYXNzPSJuZXMtYnRuIGlzLXByaW1hcnkiIEBjbGljaz0iY3JlYXRlVGVzdFJld2FyZCI+CiAgICAgIENyZWF0ZSBUZXN0IE1pbnQKICAgIDwvYnV0dG9uPgogICAgPGRpdiB2LWlmPSJtaW50Ij4KICAgICAgPHAgY2xhc3M9Im15LTIiPgogICAgICAgIPCfjokgTmV3IG1pbnQgY3JlYXRlZCBhbmQgMSwwMDAsMDAwIHRva2VucyBkZXBvc2l0ZWQgaW50byB5b3VyIHdhbGxldCEKICAgICAgPC9wPgogICAgICA8cCBjbGFzcz0ibWItNSI+TWludDoge3sgbWludCB9fTwvcD4KICAgIDwvZGl2PgogIDwvZGl2Pgo="},{"version":3,"sources":["/home/gynchiii/gem-farm/app/gem-farm/src/components/gem-farm/TestMint.vue"],"names":[],"mappings":";EACE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACnC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC3C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAC1D,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACR,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACd,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACb,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACrE,CAAC,CAAC,CAAC;MACH,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACrC,CAAC,CAAC,CAAC,CAAC,CAAC;EACP,CAAC,CAAC,CAAC,CAAC,CAAC","file":"/home/gynchiii/gem-farm/app/gem-farm/src/components/gem-farm/TestMint.vue","sourceRoot":"","sourcesContent":["<template>\n  <div class=\"nes-container with-title\">\n    <p class=\"title\">Create Test Reward Mint</p>\n    <button class=\"nes-btn is-primary\" @click=\"createTestReward\">\n      Create Test Mint\n    </button>\n    <div v-if=\"mint\">\n      <p class=\"my-2\">\n        ðŸŽ‰ New mint created and 1,000,000 tokens deposited into your wallet!\n      </p>\n      <p class=\"mb-5\">Mint: {{ mint }}</p>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, ref } from 'vue';\nimport useWallet from '@/composables/wallet';\nimport useCluster from '@/composables/cluster';\nimport { BrowserWallet } from '@gemworks/gem-farm-ts';\n\nexport default defineComponent({\n  setup() {\n    const { getWallet } = useWallet();\n    const { getConnection } = useCluster();\n\n    const mint = ref<string>();\n\n    const createTestReward = async () => {\n      const bw = new BrowserWallet(getConnection(), getWallet() as any);\n\n      const { mint: rewardMint } = await bw.createMintAndFundATA(0, 1000000);\n      mint.value = rewardMint.toBase58();\n    };\n\n    return {\n      mint,\n      createTestReward,\n    };\n  },\n});\n</script>\n\n<style scoped></style>\n"]}]}